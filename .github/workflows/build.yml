      - name: Export Variables (Draft/Default)
        if: github.event_name != 'workflow_dispatch' || inputs.releaseTag == 'Draft'
        run: |
          echo "RX_VERSION=$(git log --date=format:%Y%m%d --pretty=format:%cd -n 1)" >> "$GITHUB_ENV"
          echo "RX_SHA=$(git log --pretty=format:%h -n 1)" >> "$GITHUB_ENV"

      - name: Export Variables (Release/RC)
        if: github.event_name == 'workflow_dispatch' && inputs.releaseTag != 'Draft'
        run: |
          echo "RX_VERSION=$(git log --date=format:%Y%m%d --pretty=format:%cd -n 1)" >> "$GITHUB_ENV"

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Android Lint
        continue-on-error: true
        run: ./gradlew lint --no-daemon --build-cache

      - name: Build (PR Debug)
        if: github.event_name == 'pull_request'
        env:
          CMAKE_C_COMPILER_LAUNCHER: ccache
          CMAKE_CXX_COMPILER_LAUNCHER: ccache
        run: ./gradlew assembleDebug --no-daemon --stacktrace --build-cache -Dorg.gradle.jvmargs="-Xmx4g"

      - name: Upload Debug artifact (PR)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: rpcsx-debug-${{ env.RX_VERSION }}-${{ env.RX_SHA }}
          compression-level: 0
          path: app/build/outputs/apk/debug/*.apk

      - name: Decode Keystore
        if: github.event_name != 'pull_request'
        env:
          KEYSTORE_ENCODED: ${{ secrets.KEYSTORE }}
        run: |
          echo "$KEYSTORE_ENCODED" | base64 --decode > ${{ github.workspace }}/app/ks.jks

      - name: Build (Release)
        if: github.event_name != 'pull_request'
        env:
          KEYSTORE_PATH: app/ks.jks
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          CMAKE_C_COMPILER_LAUNCHER: ccache
          CMAKE_CXX_COMPILER_LAUNCHER: ccache
        run: ./gradlew assembleRelease --no-daemon --stacktrace --build-cache -Dorg.gradle.jvmargs="-Xmx4g"

      - name: Upload Release artifact (non-dispatch)
        if: github.event_name != 'workflow_dispatch' && github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: rpcsx-release-${{ env.RX_VERSION }}-${{ env.RX_SHA }}
          compression-level: 0
          path: app/build/outputs/apk/release/rpcsx-release.apk

      - name: Create GitHub Release (manual)
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ inputs.releaseTag != 'Release' }}
          make_latest: ${{ inputs.releaseTag == 'Release' }}
          tag_name: v${{ env.RX_VERSION }}${{ inputs.releaseTag == 'Draft' && format('-{0}', env.RX_SHA) || '' }}${{ inputs.releaseTag != 'Release' && format('-{0}', inputs.releaseTag) || '' }}${{ inputs.releaseTagVersion != 0 && format('-{0}', inputs.releaseTagVersion) || '' }}
          files: app/build/outputs/apk/release/rpcsx-release.apk

      - name: Deploy build to RPCSX/rpcsx-ui-android-build
        uses: softprops/action-gh-release@v2
        if: |
          github.event_name != 'pull_request' &&
          github.event_name != 'workflow_dispatch' &&
          github.ref == 'refs/heads/master' &&
          github.repository == 'RPCSX/rpcsx-ui-android'
        with:
          prerelease: false
          make_latest: true
          repository: RPCSX/rpcsx-ui-android-build
          token: ${{ secrets.BUILD_TOKEN }}
          tag_name: v${{ env.RX_VERSION }}-${{ env.RX_SHA }}
          files: app/build/outputs/apk/release/rpcsx-release.apk
          body: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}

      - name: Cleanup keystore
        if: always()
        run: |
          rm -f ${{ github.workspace }}/app/ks.jks
