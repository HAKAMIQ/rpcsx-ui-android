# Todo List:
# - Move librpcsx compilation away
# - Do not use legacy CMake scripts (figure out how)

name: Java CI with Gradle

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: Release tag type
        type: choice
        options: [Draft, RC, Release]
        default: Draft
      releaseTagVersion:
        description: Release tag version
        type: number
        default: 0
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Java (Temurin 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # ---------- Version metadata ----------
      - name: Export RX_VERSION/RX_SHA (default / Draft)
        if: github.event_name != 'workflow_dispatch' || inputs.releaseTag == 'Draft'
        run: |
          echo "RX_VERSION=$(git log --date=format:%Y%m%d --pretty=format:%cd -n 1)" >> "$GITHUB_ENV"
          echo "RX_SHA=$(git log --pretty=format:%h -n 1)" >> "$GITHUB_ENV"

      - name: Export RX_VERSION (Release/RC)
        if: github.event_name == 'workflow_dispatch' && inputs.releaseTag != 'Draft'
        run: |
          echo "RX_VERSION=$(git log --date=format:%Y%m%d --pretty=format:%cd -n 1)" >> "$GITHUB_ENV"

      - name: Compute TAG_NAME (workflow_dispatch only)
        if: github.event_name == 'workflow_dispatch'
        shell: bash
        run: |
          TAG="v${RX_VERSION}"
          if [[ "${{ inputs.releaseTag }}" == "Draft" ]]; then
            TAG="${TAG}-${RX_SHA}"
          fi
          if [[ "${{ inputs.releaseTag }}" != "Release" ]]; then
            TAG="${TAG}-${{ inputs.releaseTag }}"
          fi
          if [[ ${{ inputs.releaseTagVersion }} -ne 0 ]]; then
            TAG="${TAG}-${{ inputs.releaseTagVersion }}"
          fi
          echo "TAG_NAME=${TAG}" >> "$GITHUB_ENV"
          echo "Computed TAG_NAME=${TAG}"

      # ---------- Quality ----------
      - name: Android Lint
        continue-on-error: true
        run: ./gradlew lint --no-daemon --build-cache

      # ---------- PR (Debug) ----------
      - name: Build (PR Debug)
        if: github.event_name == 'pull_request'
        env:
          CMAKE_C_COMPILER_LAUNCHER: ccache
          CMAKE_CXX_COMPILER_LAUNCHER: ccache
        run: ./gradlew assembleDebug --no-daemon --stacktrace --build-cache -Dorg.gradle.jvmargs="-Xmx4g"

      - name: Upload Debug artifact (PR)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: rpcsx-debug-${{ env.RX_VERSION }}-${{ env.RX_SHA }}
          compression-level: 0
          if-no-files-found: error
          path: app/build/outputs/apk/debug/*.apk

      # ---------- Non-PR (Release) ----------
      - name: Decode Keystore (non-PR)
        if: github.event_name != 'pull_request'
        env:
          KEYSTORE_ENCODED: ${{ secrets.KEYSTORE }}
        run: |
          if [[ -n "$KEYSTORE_ENCODED" ]]; then
            echo "$KEYSTORE_ENCODED" | base64 --decode > "${{ github.workspace }}/app/ks.jks"
          else
            echo "Custom keystore not found or empty! using project's debug keystore fallback."
          fi

      - name: Build (Release)
        if: github.event_name != 'pull_request'
        env:
          KEYSTORE_PATH: app/ks.jks
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          CMAKE_C_COMPILER_LAUNCHER: ccache
          CMAKE_CXX_COMPILER_LAUNCHER: ccache
        run: ./gradlew assembleRelease --no-daemon --stacktrace --build-cache -Dorg.gradle.jvmargs="-Xmx4g"

      - name: Upload Release artifact (non-dispatch)
        if: github.event_name != 'workflow_dispatch' && github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: rpcsx-release-${{ env.RX_VERSION }}-${{ env.RX_SHA }}
          compression-level: 0
          if-no-files-found: error
          path: app/build/outputs/apk/release/*.apk

      # ---------- Manual Release (workflow_dispatch) ----------
      - name: Create GitHub Release (manual)
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ inputs.releaseTag != 'Release' }}
          make_latest: ${{ inputs.releaseTag == 'Release' }}
          tag_name: ${{ env.TAG_NAME }}
          files: app/build/outputs/apk/release/*.apk

      # ---------- Auto-deploy to mirror repo (upstream settings) ----------
      - name: Deploy build to RPCSX/rpcsx-ui-android-build
        uses: softprops/action-gh-release@v2
        if: |
          github.event_name != 'pull_request' &&
          github.event_name != 'workflow_dispatch' &&
          github.ref == 'refs/heads/master' &&
          github.repository == 'RPCSX/rpcsx-ui-android'
        with:
          prerelease: false
          make_latest: true
          repository: RPCSX/rpcsx-ui-android-build
          token: ${{ secrets.BUILD_TOKEN }}
          tag_name: v${{ env.RX_VERSION }}-${{ env.RX_SHA }}
          files: app/build/outputs/apk/release/*.apk
          body: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}

      - name: Cleanup keystore
        if: always()
        run: rm -f "${{ github.workspace }}/app/ks.jks"
